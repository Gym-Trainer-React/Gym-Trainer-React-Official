[{"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/index.tsx":"1","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/reportWebVitals.ts":"2","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/App.tsx":"3","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/context/ContextProviders.tsx":"4","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/Routes.tsx":"5","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/Navbar/Navbar.tsx":"6","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/context/AppUserProvider.tsx":"7","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/pages/HomePage.tsx":"8","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/pages/AuthPage.tsx":"9","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/pages/ExercisePage.tsx":"10","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/Exercise.tsx":"11","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/util/ApiConfig.ts":"12","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/CredentialsForm.tsx":"13","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/pages/WorkoutLogPage.tsx":"14","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/WorkoutLog.tsx":"15","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/StickyFooter.tsx":"16"},{"size":860,"mtime":1662479740593,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1662479740594,"results":"19","hashOfConfig":"18"},{"size":805,"mtime":1662561286896,"results":"20","hashOfConfig":"18"},{"size":207,"mtime":1662479740592,"results":"21","hashOfConfig":"18"},{"size":712,"mtime":1662497752602,"results":"22","hashOfConfig":"18"},{"size":1090,"mtime":1662498005990,"results":"23","hashOfConfig":"18"},{"size":637,"mtime":1662479740592,"results":"24","hashOfConfig":"18"},{"size":76,"mtime":1662493957850,"results":"25","hashOfConfig":"18"},{"size":221,"mtime":1662479740593,"results":"26","hashOfConfig":"18"},{"size":3322,"mtime":1662479740593,"results":"27","hashOfConfig":"18"},{"size":398,"mtime":1662493957849,"results":"28","hashOfConfig":"18"},{"size":115,"mtime":1662479740594,"results":"29","hashOfConfig":"18"},{"size":2011,"mtime":1662479740591,"results":"30","hashOfConfig":"18"},{"size":1889,"mtime":1662601282620,"results":"31","hashOfConfig":"18"},{"size":2285,"mtime":1662602603228,"results":"32","hashOfConfig":"18"},{"size":1278,"mtime":1662561575571,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1swwe5c",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/index.tsx",[],[],"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/reportWebVitals.ts",[],[],"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/App.tsx",["86","87","88"],[],"\nimport React, { useEffect, useState } from \"react\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Routes from \"./components/Routes\";\nimport StickyFooter from \"./components/StickyFooter\";\nimport AppUserProvider from \"./context/AppUserProvider\";\n\n// React Context API -> allows to define a context that is visible throughout our app\n//    Essentially CONTEXT is GLOBAL STATE\n//      1. Establish a Context\n//      2. Wrap your components within the Context.Provider component\n//      3. Pass the value of the state variable as a property to the Provider\n//      4. In a component that needs access to the state of the context, use the useContext(ProviderName) hook\n\nfunction App() {\n  return <> \n          <Navbar />\n          <Routes />\n          <StickyFooter/>\n  </>\n}\n\n\n\nexport default App;\n","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/context/ContextProviders.tsx",[],[],"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/Routes.tsx",[],[],"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/Navbar/Navbar.tsx",[],[],"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/context/AppUserProvider.tsx",[],[],"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/pages/HomePage.tsx",[],[],"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/pages/AuthPage.tsx",[],[],"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/pages/ExercisePage.tsx",["89","90"],[],"import { useState, useEffect } from \"react\"\nimport Exercise from \"../components/Exercise\";\nimport { WORKOUT_API } from \"../util/ApiConfig\";\n\nexport interface ExerciseData{\n    id: number;\n    name: string;\n    exercise_base: number;\n    description: string;\n    category: number;\n\n    muscles: Array<number>;\n    muscles_secondary: Array<number>;\n    equipment: Array<number>;\n    variations: Array<number>;\n}\n\nconst tempExercises: Array<ExerciseData> = [\n    {\n        \"id\": 345,\n        \"name\": \"2 Handed Kettlebell Swing\",\n        \"exercise_base\": 9,\n        \"description\": \"<p>Two Handed Russian Style Kettlebell swing</p>\",\n        \"category\": 10,\n        \"muscles\": [],\n        \"muscles_secondary\": [],\n        \"equipment\": [\n            10\n        ],\n        \"variations\": []\n    },\n    {\n        \"id\": 227,\n        \"name\": \"Arnold Shoulder Press\",\n        \"exercise_base\": 20,\n        \"description\": \"<p>Very common shoulder exercise.</p>\\n<p> </p>\\n<p>As shown here: https://www.youtube.com/watch?v=vj2w851ZHRM</p>\",\n        \"category\": 13,\n        \"muscles\": [],\n        \"muscles_secondary\": [],\n        \"equipment\": [\n            3\n        ],\n        \"variations\": [\n            227,\n            329,\n            229,\n            190,\n            119,\n            123,\n            152,\n            155\n        ]\n    },\n    {\n        \"id\": 289,\n\n        \"name\": \"Axe Hold\",\n        \"exercise_base\": 31,\n        \"description\": \"<p>Grab dumbbells and extend arms to side and hold as long as you can</p>\",\n        \"category\": 8,\n        \"muscles\": [],\n        \"muscles_secondary\": [],\n        \"equipment\": [\n            3\n        ],\n        \"variations\": []\n    }\n]\n\nexport default function ExercisePage(){\n\n    const [exercises, setExercises] = useState<Array<ExerciseData> | null>(null)\n\n\n    useEffect(pageLoad, [])\n\n    function pageLoad(){\n        // fetch and bind data\n        fetchData()\n    }\n\n    function fetchData(): void{\n        // TODO: replace with an actual API call using Axios\n        //      resolve the promise, convert the body to JSON, map it to an Array<ExerciseData> and return it\n\n        // fetch('https://wger.de/api/v2/exercise?language=2')\n        //     .then((response) => response.json())\n        //     .then((data) => setExercises(mapData(data)))\n\n        WORKOUT_API.get('exercise?language=2')\n            .then(response => setExercises(mapData(response.data)))\n    }\n\n    function mapData(data: any): Array<ExerciseData>{\n        return data.results.map(({id, name, exercise_base, description, category, muscles, muscles_secondary, equipment, variations}: any) => {\n            return {\n                \"id\": id,\n                \"name\": name,\n                \"exercise_base\": exercise_base,\n                \"description\": description,\n                \"category\": category,\n                \"muscles\": muscles,\n                \"muscles_secondary\": muscles_secondary,\n                \"equipment\": equipment,\n                \"variations\": variations\n            }\n        })\n    }\n\n\n    return !exercises ? \n    \n         <LoadingBar /> :\n         <>\n            {exercises.map((exercise: ExerciseData, i) => <Exercise key={i} exercise={exercise}/>)}\n         </>\n        \n}\n\n\nfunction LoadingBar(){\n    // TODO: replace with an actual loading bar\n    return <h1>Loading...</h1>\n}","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/Exercise.tsx",[],[],"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/util/ApiConfig.ts",[],[],"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/CredentialsForm.tsx",[],[],"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/pages/WorkoutLogPage.tsx",["91"],[],"import { useEffect, useState } from \"react\";\nimport WorkoutLog from \"../components/WorkoutLog\";\n\nexport interface WorkoutLogData {\n  userId: number;\n  workoutId: number;\n  workoutName: string;\n  comment: string;\n  completed: boolean;\n  dateCompleted: Date;\n}\n\nconst tempWorkoutLog: Array<WorkoutLogData> = [\n  {\n    userId: 1,\n    workoutId: 1,\n    workoutName: \"Test Workout1\",\n    comment: \"test comment\",\n    completed: false,\n    dateCompleted: new Date(\"2022-01-02\"),\n  },\n  {\n    userId: 2,\n    workoutId: 2,\n    workoutName: \"Test Workout2\",\n    comment: \"test comment\",\n    completed: true,\n    dateCompleted: new Date(\"2021-02-01\"),\n  },\n];\n\nexport default function WorkoutLogPage() {\n  const [workoutLog, setWorkoutLog] = useState<Array<WorkoutLogData> | null>(\n    null\n  );\n\n  useEffect(pageLoad);\n  function pageLoad(){\n    //   fetchWorkoutLog();\n    setWorkoutLog(fetchWorkoutLogData());\n\n  }\n  function fetchWorkoutLogData(): Array<WorkoutLogData>{\n      // take Workout Log data and display on the page\n    //   WORKOUT_API.get('exercise?language=2')\n    //   .then(response => setExercises(mapData(response.data)))\n    return tempWorkoutLog;\n\n  }\n\n  function displayWorkoutLog() {\n    // take user id and display all the workout log data\n  }\n//   function mapData(data:any) : Array<WorkoutLogData>{\n//     return data.map(({userId,workoutId,comment,completed,dateCompleted }:any)) =>{\n//         return{\n//             userId: userId,\n//             workoutId: workoutId,\n//             comment: comment,\n//             completed: completed,\n//             dateCompleted: dateCompleted\n//         }\n//     }\n\n//   }\nreturn !workoutLog ? \n    \n<LoadingBar /> :\n<>\n   {workoutLog.map((workoutLog: WorkoutLogData, i) => <WorkoutLog key={i} workoutLog={workoutLog}/>)}\n</>\n\n}\n\n\nfunction LoadingBar(){\n// TODO: replace with an actual loading bar\nreturn <h1>Loading...</h1>\n}\n\n","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/WorkoutLog.tsx",["92","93"],[],"import { WorkoutLogData } from \"../pages/WorkoutLogPage\";\n\n\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\ninterface WorkoutLogProps{\n    workoutLog: WorkoutLogData;\n}\n\n\n// const bull = (\n//   <Box\n//     component=\"span\"\n//     sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n//   >\n//     •\n//   </Box>\n// );\n\n\n\n\n\n\nexport default function WorkoutLog({workoutLog}:WorkoutLogProps){\n    const card = (\n        <React.Fragment>\n          <CardContent  >\n            <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            User Id: {workoutLog.userId}\n            </Typography>\n            <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            Workout Id: {workoutLog.workoutId}\n            </Typography>\n   \n            \n            <Typography variant=\"h5\" component=\"div\">\n             {workoutLog.workoutName}\n            </Typography>\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                Completed: {workoutLog.completed ? 'true' : 'false'}\n            </Typography>\n            <Typography variant=\"body2\">\n            Comment: {workoutLog.comment}\n            </Typography>\n            <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n            Date: {workoutLog.dateCompleted.toString()}\n            </Typography>\n          </CardContent>\n          {/* <CardActions>\n            <Button size=\"small\">Learn More</Button>\n          </CardActions> */}\n        </React.Fragment>\n       \n      );\n    return <div style={{ display:'flex', justifyContent:'center' }}>\n        {/* <h3>User Id: {workoutLog.userId}</h3>\n        <h3>Workout Id: {workoutLog.workoutId}</h3>\n        <p>Comment: {workoutLog.comment}</p>\n        <p>Completed: {workoutLog.completed ? 'true' : 'false'}</p>\n        <p>Date: {workoutLog.dateCompleted.toString()}</p> */\n        <Box sx={{ minWidth: 275  }}m={1}>\n        <Card variant=\"outlined\">{card}</Card>\n      </Box>\n      \n        }\n        \n    </div>\n\n\n\n}\n\n\n","/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/StickyFooter.tsx",[],[],{"ruleId":"94","severity":1,"message":"95","line":2,"column":17,"nodeType":"96","messageId":"97","endLine":2,"endColumn":26},{"ruleId":"94","severity":1,"message":"98","line":2,"column":28,"nodeType":"96","messageId":"97","endLine":2,"endColumn":36},{"ruleId":"94","severity":1,"message":"99","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":23},{"ruleId":"94","severity":1,"message":"100","line":18,"column":7,"nodeType":"96","messageId":"97","endLine":18,"endColumn":41},{"ruleId":"101","severity":1,"message":"102","line":75,"column":25,"nodeType":"103","endLine":75,"endColumn":27,"suggestions":"104"},{"ruleId":"94","severity":1,"message":"105","line":51,"column":12,"nodeType":"96","messageId":"97","endLine":51,"endColumn":29},{"ruleId":"94","severity":1,"message":"106","line":8,"column":8,"nodeType":"96","messageId":"97","endLine":8,"endColumn":19},{"ruleId":"94","severity":1,"message":"107","line":10,"column":8,"nodeType":"96","messageId":"97","endLine":10,"endColumn":14},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'AppUserProvider' is defined but never used.","'tempExercises' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'displayWorkoutLog' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.",{"desc":"109","fix":"110"},"Update the dependencies array to be: [fetchData]",{"range":"111","text":"112"},[1822,1824],"[fetchData]"]