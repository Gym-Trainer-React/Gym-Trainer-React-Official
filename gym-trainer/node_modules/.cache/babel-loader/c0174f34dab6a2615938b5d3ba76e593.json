{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cartm\\\\OneDrive\\\\Desktop\\\\React-Gym-Trainer\\\\Gym-Trainer-React-Official\\\\gym-trainer\\\\src\\\\components\\\\CredentialsForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { AppUserUpdateContext } from \"../context/AppUserProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CredentialsForm(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  // State\n  //      the state of a component is a self contained representation of its\n  //      its currently held values\n  //  these are not state variable\n  //      let username: string;\n  //      let password: string;\n  //  when state variables are properly changed in react, they trigger reconcilliation\n  //  state management in function components are managed through Hooks\n  //      they almost always follow the format    useNameOfHook -> useState()\n  //      const [username, setUsername] = useState(\"\")\n  //      useState returns an array of two elements\n  //      [stateVariable, functionToUpdateTheState]\n  //      useState gets passed an argument of the initial value\n  const setAppUser = useContext(AppUserUpdateContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function submit() {\n    const user = {\n      username: username,\n      password: password\n    }; // TODO: call the API to log them in -> return a token\n    //      lift the state of appUser back up to our App component\n    // if(setAppUser) setAppUser(user);\n\n    setAppUser(user); // equivalent to the above\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submit,\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CredentialsForm, \"XE+x356a60qCc2yIFkFOUYpWxz4=\");\n\n_c = CredentialsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CredentialsForm\");","map":{"version":3,"names":["useContext","useState","AppUserUpdateContext","CredentialsForm","type","setAppUser","username","setUsername","password","setPassword","submit","user","e","target","value"],"sources":["C:/Users/cartm/OneDrive/Desktop/React-Gym-Trainer/Gym-Trainer-React-Official/gym-trainer/src/components/CredentialsForm.tsx"],"sourcesContent":["import {useContext, useState} from \"react\"\r\nimport { AppUser, AppUserUpdateContext } from \"../context/AppUserProvider\";\r\n\r\ninterface CredentialsFormProps{\r\n    type: CredentialFormType;\r\n}\r\n\r\ntype CredentialFormType = \"Login\" | \"Register\"\r\n\r\nexport default function CredentialsForm({type}: CredentialsFormProps){\r\n        // State\r\n        //      the state of a component is a self contained representation of its\r\n        //      its currently held values\r\n        //  these are not state variable\r\n        //      let username: string;\r\n        //      let password: string;\r\n\r\n        //  when state variables are properly changed in react, they trigger reconcilliation\r\n        //  state management in function components are managed through Hooks\r\n        //      they almost always follow the format    useNameOfHook -> useState()\r\n\r\n        //      const [username, setUsername] = useState(\"\")\r\n        //      useState returns an array of two elements\r\n        //      [stateVariable, functionToUpdateTheState]\r\n        //      useState gets passed an argument of the initial value\r\n\r\n        const setAppUser = useContext(AppUserUpdateContext);\r\n        const [username, setUsername] = useState<string>(\"\")\r\n        const [password, setPassword] = useState<string>(\"\")\r\n\r\n\r\n\r\n        function submit(){\r\n            const user: AppUser = {\r\n                username: username,\r\n                password: password\r\n            }\r\n            // TODO: call the API to log them in -> return a token\r\n            //      lift the state of appUser back up to our App component\r\n            // if(setAppUser) setAppUser(user);\r\n            setAppUser!(user); // equivalent to the above\r\n        }\r\n        \r\n\r\n   return <>\r\n        <input type=\"text\" placeholder=\"username\" value={username} onChange={(e) => setUsername(e.target.value)}/> \r\n        <br></br>\r\n        <input type=\"password\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n        <br></br>\r\n        <button onClick={submit}>{type}</button>\r\n   </>\r\n}"],"mappings":";;;AAAA,SAAQA,UAAR,EAAoBC,QAApB,QAAmC,OAAnC;AACA,SAAkBC,oBAAlB,QAA8C,4BAA9C;;;AAQA,eAAe,SAASC,eAAT,OAAsD;EAAA;;EAAA,IAA7B;IAACC;EAAD,CAA6B;EAC7D;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA,MAAMC,UAAU,GAAGL,UAAU,CAACE,oBAAD,CAA7B;EACA,MAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAS,EAAT,CAAxC;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAS,EAAT,CAAxC;;EAIA,SAASS,MAAT,GAAiB;IACb,MAAMC,IAAa,GAAG;MAClBL,QAAQ,EAAEA,QADQ;MAElBE,QAAQ,EAAEA;IAFQ,CAAtB,CADa,CAKb;IACA;IACA;;IACAH,UAAU,CAAEM,IAAF,CAAV,CARa,CAQM;EACtB;;EAGN,oBAAO;IAAA,wBACF;MAAO,IAAI,EAAC,MAAZ;MAAmB,WAAW,EAAC,UAA/B;MAA0C,KAAK,EAAEL,QAAjD;MAA2D,QAAQ,EAAGM,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;IAAvF;MAAA;MAAA;MAAA;IAAA,QADE,eAEF;MAAA;MAAA;MAAA;IAAA,QAFE,eAGF;MAAO,IAAI,EAAC,UAAZ;MAAuB,WAAW,EAAC,UAAnC;MAA8C,KAAK,EAAEN,QAArD;MAA+D,QAAQ,EAAGI,CAAD,IAAOH,WAAW,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;IAA3F;MAAA;MAAA;MAAA;IAAA,QAHE,eAIF;MAAA;MAAA;MAAA;IAAA,QAJE,eAKF;MAAQ,OAAO,EAAEJ,MAAjB;MAAA,UAA0BN;IAA1B;MAAA;MAAA;MAAA;IAAA,QALE;EAAA,gBAAP;AAOF;;GA1CuBD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}