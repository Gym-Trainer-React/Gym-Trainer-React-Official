{"ast":null,"code":"var _jsxFileName = \"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/pages/WorkoutLogPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport WorkoutLog from \"../components/WorkoutLog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tempWorkoutLog = [{\n  userId: 1,\n  workoutId: 1,\n  workoutName: \"Test Workout1\",\n  comment: \"test comment\",\n  completed: false,\n  dateCompleted: new Date(\"2022-01-02\")\n}, {\n  userId: 2,\n  workoutId: 2,\n  workoutName: \"Test Workout\",\n  comment: \"test comment\",\n  completed: true,\n  dateCompleted: new Date(\"2021-02-01\")\n}];\nexport default function WorkoutLogPage() {\n  _s();\n\n  const [workoutLog, setWorkoutLog] = useState(null);\n  useEffect(pageLoad);\n\n  function pageLoad() {\n    //   fetchWorkoutLog();\n    setWorkoutLog(fetchWorkoutLogData());\n  }\n\n  function fetchWorkoutLogData() {\n    // take Workout Log data and display on the page\n    //   WORKOUT_API.get('exercise?language=2')\n    //   .then(response => setExercises(mapData(response.data)))\n    return tempWorkoutLog;\n  }\n\n  function displayWorkoutLog() {// take user id and display all the workout log data\n  } //   function mapData(data:any) : Array<WorkoutLogData>{\n  //     return data.map(({userId,workoutId,comment,completed,dateCompleted }:any)) =>{\n  //         return{\n  //             userId: userId,\n  //             workoutId: workoutId,\n  //             comment: comment,\n  //             completed: completed,\n  //             dateCompleted: dateCompleted\n  //         }\n  //     }\n  //   }\n\n\n  return !workoutLog ? /*#__PURE__*/_jsxDEV(LoadingBar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 1\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: workoutLog.map((workoutLog, i) => /*#__PURE__*/_jsxDEV(WorkoutLog, {\n      workoutLog: workoutLog\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 55\n    }, this))\n  }, void 0, false);\n}\n\n_s(WorkoutLogPage, \"YqlOscuAHcOJeI+LOa04I+ItO0c=\");\n\n_c = WorkoutLogPage;\n\nfunction LoadingBar() {\n  // TODO: replace with an actual loading bar\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 8\n  }, this);\n}\n\n_c2 = LoadingBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WorkoutLogPage\");\n$RefreshReg$(_c2, \"LoadingBar\");","map":{"version":3,"names":["useEffect","useState","WorkoutLog","tempWorkoutLog","userId","workoutId","workoutName","comment","completed","dateCompleted","Date","WorkoutLogPage","workoutLog","setWorkoutLog","pageLoad","fetchWorkoutLogData","displayWorkoutLog","map","i","LoadingBar"],"sources":["/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/pages/WorkoutLogPage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport WorkoutLog from \"../components/WorkoutLog\";\n\nexport interface WorkoutLogData {\n  userId: number;\n  workoutId: number;\n  workoutName: string;\n  comment: string;\n  completed: boolean;\n  dateCompleted: Date;\n}\n\nconst tempWorkoutLog: Array<WorkoutLogData> = [\n  {\n    userId: 1,\n    workoutId: 1,\n    workoutName: \"Test Workout1\",\n    comment: \"test comment\",\n    completed: false,\n    dateCompleted: new Date(\"2022-01-02\"),\n  },\n  {\n    userId: 2,\n    workoutId: 2,\n    workoutName: \"Test Workout\",\n    comment: \"test comment\",\n    completed: true,\n    dateCompleted: new Date(\"2021-02-01\"),\n  },\n];\n\nexport default function WorkoutLogPage() {\n  const [workoutLog, setWorkoutLog] = useState<Array<WorkoutLogData> | null>(\n    null\n  );\n\n  useEffect(pageLoad);\n  function pageLoad(){\n    //   fetchWorkoutLog();\n    setWorkoutLog(fetchWorkoutLogData());\n\n  }\n  function fetchWorkoutLogData(): Array<WorkoutLogData>{\n      // take Workout Log data and display on the page\n    //   WORKOUT_API.get('exercise?language=2')\n    //   .then(response => setExercises(mapData(response.data)))\n    return tempWorkoutLog;\n\n  }\n\n  function displayWorkoutLog() {\n    // take user id and display all the workout log data\n  }\n//   function mapData(data:any) : Array<WorkoutLogData>{\n//     return data.map(({userId,workoutId,comment,completed,dateCompleted }:any)) =>{\n//         return{\n//             userId: userId,\n//             workoutId: workoutId,\n//             comment: comment,\n//             completed: completed,\n//             dateCompleted: dateCompleted\n//         }\n//     }\n\n//   }\nreturn !workoutLog ? \n    \n<LoadingBar /> :\n<>\n   {workoutLog.map((workoutLog: WorkoutLogData, i) => <WorkoutLog key={i} workoutLog={workoutLog}/>)}\n</>\n\n}\n\n\nfunction LoadingBar(){\n// TODO: replace with an actual loading bar\nreturn <h1>Loading...</h1>\n}\n\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAWA,MAAMC,cAAqC,GAAG,CAC5C;EACEC,MAAM,EAAE,CADV;EAEEC,SAAS,EAAE,CAFb;EAGEC,WAAW,EAAE,eAHf;EAIEC,OAAO,EAAE,cAJX;EAKEC,SAAS,EAAE,KALb;EAMEC,aAAa,EAAE,IAAIC,IAAJ,CAAS,YAAT;AANjB,CAD4C,EAS5C;EACEN,MAAM,EAAE,CADV;EAEEC,SAAS,EAAE,CAFb;EAGEC,WAAW,EAAE,cAHf;EAIEC,OAAO,EAAE,cAJX;EAKEC,SAAS,EAAE,IALb;EAMEC,aAAa,EAAE,IAAIC,IAAJ,CAAS,YAAT;AANjB,CAT4C,CAA9C;AAmBA,eAAe,SAASC,cAAT,GAA0B;EAAA;;EACvC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAC1C,IAD0C,CAA5C;EAIAD,SAAS,CAACc,QAAD,CAAT;;EACA,SAASA,QAAT,GAAmB;IACjB;IACAD,aAAa,CAACE,mBAAmB,EAApB,CAAb;EAED;;EACD,SAASA,mBAAT,GAAqD;IACjD;IACF;IACA;IACA,OAAOZ,cAAP;EAED;;EAED,SAASa,iBAAT,GAA6B,CAC3B;EACD,CArBsC,CAsBzC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;;EACA,OAAO,CAACJ,UAAD,gBAEP,QAAC,UAAD;IAAA;IAAA;IAAA;EAAA,QAFO,gBAGP;IAAA,UACIA,UAAU,CAACK,GAAX,CAAe,CAACL,UAAD,EAA6BM,CAA7B,kBAAmC,QAAC,UAAD;MAAoB,UAAU,EAAEN;IAAhC,GAAiBM,CAAjB;MAAA;MAAA;MAAA;IAAA,QAAlD;EADJ,iBAHA;AAOC;;GAzCuBP,c;;KAAAA,c;;AA4CxB,SAASQ,UAAT,GAAqB;EACrB;EACA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACC;;MAHQA,U"},"metadata":{},"sourceType":"module"}