{"ast":null,"code":"var _jsxFileName = \"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/Form/GymForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GymForm() {\n  _s();\n\n  const [goal, setGoal] = useState(\"\");\n  const [split, setSplit] = useState(\"\");\n\n  const handleGoalChange = e => {\n    setGoal(e.target.value);\n  };\n\n  const handleSplitChange = e => {\n    setSplit(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" What is your desired outcome? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: goal,\n        onChange: handleGoalChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Cutting\",\n          children: \"Cutting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Maintaining\",\n          children: \"Maintaining\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Bulking\",\n          children: \"Bulking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" How many times a week do you want to workout? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: split,\n        onChange: handleSplitChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3-days\",\n          children: \"3 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4-days\",\n          children: \"4 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5-days\",\n          children: \"5 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n} // Notes: \n\n/*\n    - Do you want to see individual exercises or see all of them?\n    - Do we want a filter function to categorize the main muscle group of each exercise?\n    - How do we want the user/consumer to use this? What is the outcome of this feature?\n\n    Pick the route we want to go in: (Form)\n        - Users ( admin and customer )\n            - customer\n        - What is your desired outcome?\n            - Bulking, maintaining, cuting (Enum)\n        - User Schedule\n            - Type of Split (3 - beginner, 4- intermediate, 5-advanced day split option)\n    \n    Then goes to the workouts that are appropriate to answered questions.\n\n    Display after form: (photo, name, discription, link (optional), # reps, # sets)\n        Workouts for split\n            - workouts \n\n    Ex: render three days of exercises, one upper body, one lower body, and in between. \n    \n*/\n\n_s(GymForm, \"KQjsT3gjkjg+AFctdM3uql+xgxQ=\");\n\n_c = GymForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GymForm\");","map":{"version":3,"names":["React","useState","GymForm","goal","setGoal","split","setSplit","handleGoalChange","e","target","value","handleSplitChange"],"sources":["/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/components/Form/GymForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function GymForm(){\n\n    const [goal, setGoal] = useState(\"\");\n    const [split, setSplit] = useState(\"\");\n\n    const handleGoalChange = (e: any) => {\n        setGoal(e.target.value);\n    }\n\n    const handleSplitChange = (e: any) => {\n        setSplit(e.target.value);\n    }\n    \n    return <div> \n        <form>\n            {/* user input */}\n\n            <label> What is your desired outcome? </label>\n            <select value={goal} onChange={handleGoalChange}>\n                {/* <option value=\"NoGoal\">Choose an option</option> */}\n                <option value=\"Cutting\">Cutting</option>\n                <option value=\"Maintaining\">Maintaining</option>\n                <option value=\"Bulking\">Bulking</option>\n            </select>\n\n            <label> How many times a week do you want to workout? </label>\n            <select value={split} onChange={handleSplitChange}>\n                {/* <option value=\"NoSplit\">Choose an option</option> */}\n                <option value=\"3-days\">3 Days</option>\n                <option value=\"4-days\">4 Days</option>\n                <option value=\"5-days\">5 Days</option>\n            </select>\n\n            <button type=\"submit\">Submit</button>\n            {/* Need to handle submit to Generate workout */}\n        </form>\n    </div>\n}\n\n// Notes: \n/*\n    - Do you want to see individual exercises or see all of them?\n    - Do we want a filter function to categorize the main muscle group of each exercise?\n    - How do we want the user/consumer to use this? What is the outcome of this feature?\n\n    Pick the route we want to go in: (Form)\n        - Users ( admin and customer )\n            - customer\n        - What is your desired outcome?\n            - Bulking, maintaining, cuting (Enum)\n        - User Schedule\n            - Type of Split (3 - beginner, 4- intermediate, 5-advanced day split option)\n    \n    Then goes to the workouts that are appropriate to answered questions.\n\n    Display after form: (photo, name, discription, link (optional), # reps, # sets)\n        Workouts for split\n            - workouts \n\n    Ex: render three days of exercises, one upper body, one lower body, and in between. \n    \n*/\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,OAAT,GAAkB;EAAA;;EAE7B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMM,gBAAgB,GAAIC,CAAD,IAAY;IACjCJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;EACH,CAFD;;EAIA,MAAMC,iBAAiB,GAAIH,CAAD,IAAY;IAClCF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;EACH,CAFD;;EAIA,oBAAO;IAAA,uBACH;MAAA,wBAGI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAQ,KAAK,EAAEP,IAAf;QAAqB,QAAQ,EAAEI,gBAA/B;QAAA,wBAEI;UAAQ,KAAK,EAAC,SAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAQ,KAAK,EAAC,aAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAQ,KAAK,EAAC,SAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eAWI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ,eAYI;QAAQ,KAAK,EAAEF,KAAf;QAAsB,QAAQ,EAAEM,iBAAhC;QAAA,wBAEI;UAAQ,KAAK,EAAC,QAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAQ,KAAK,EAAC,QAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAQ,KAAK,EAAC,QAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAZJ,eAmBI;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAnBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADG;IAAA;IAAA;IAAA;EAAA,QAAP;AAwBH,C,CAED;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA7DwBT,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}