{"ast":null,"code":"var _jsxFileName = \"/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/App.tsx\";\nimport React from \"react\";\nimport GymForm from \"./components/Form/GymForm\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Routes from \"./components/Routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// React Context API -> allows to define a context that is visible throughout our app\n//    Essentially CONTEXT is GLOBAL STATE\n//      1. Establish a Context\n//      2. Wrap your components within the Context.Provider component\n//      3. Pass the value of the state variable as a property to the Provider\n//      4. In a component that needs access to the state of the context, use the useContext(ProviderName) hook\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(GymForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","GymForm","Navbar","Routes","App"],"sources":["/Users/xin/Downloads/Revature/Spring_Tool/Project/React/Training/week3/Gym-Trainer-React-Official/gym-trainer/src/App.tsx"],"sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport GymForm from \"./components/Form/GymForm\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Routes from \"./components/Routes\";\nimport AppUserProvider from \"./context/AppUserProvider\";\n\n// React Context API -> allows to define a context that is visible throughout our app\n//    Essentially CONTEXT is GLOBAL STATE\n//      1. Establish a Context\n//      2. Wrap your components within the Context.Provider component\n//      3. Pass the value of the state variable as a property to the Provider\n//      4. In a component that needs access to the state of the context, use the useContext(ProviderName) hook\n\nfunction App() {\n  return <> \n          <Navbar />\n          <GymForm />\n          <Routes />\n  </>\n}\n\n\n\nexport default App;\n"],"mappings":";AACA,OAAOA,KAAP,MAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASC,GAAT,GAAe;EACb,oBAAO;IAAA,wBACC,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADD,eAEC,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAFD,eAGC,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAHD;EAAA,gBAAP;AAKD;;KANQA,G;AAUT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}